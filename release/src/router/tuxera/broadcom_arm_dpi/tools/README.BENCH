

                    RELEASE NOTES FOR TUXERA BENCHMARK


--- Introduction ---

Tuxera.bench is a high-performance benchmark, similar to 'iozone'.
The major difference is that while 'iozone' can run for a long time
to collect performance results, tuxera.bench can get the same in a
few minutes.

Tuxera.bench by default runs a test to determine the cached and
effective read and write speeds using different I/O buffer sizes in a
very short time.  The benchmark tool can be used to find the optimal
I/O buffer size and alignment giving the highest throughput on a
platform to tune performance critical applications.

With --speedtest option it runs a different test, which takes speed
samples at fixed intervals while writting a file to disk.

--- Usage ---

tuxera.bench [OPTIONS]

   Benchmark streaming file I/O.

   -a, --alignment NUMBER   Buffer alignment          [default: 4096]
   -d, --directio           No driver caching (O_DIRECT)
   -b, --begin     NUMBER   Minimum block size        [default: 512]
   -e, --end       NUMBER   Maximum block size        [default: 4 MB]
   -t, --time      NUMBER   Time to run each test     [default: 1 sec]
   -s, --speedtest          Run speed test
   -B, --blocksize NUMBER   Block size for speed test [default: 1048576 bytes]
   -f, --filesize  NUMBER   File size for speed test  [default: 1024 MB]
   -h, --help               Display this help

Typically the default buffer alignment gives the best performance
which is automatically determined.

Usage: 'cd' into a directory mounted by a file system driver to be
tested then run tuxera.bench.

During comparative testing make sure the tests are done using
the same disk and the same partition using different file systems.
Otherwise the comparison can be incorrect and misleading.

Flash memories (USB pen drives, SD, MMC, CF, etc) can have a
significantly lower speed limit than the maximum speed achievable
by the file system drivers and the results can vary in between
test runs. Using the '--time 10' tuxera.bench command line option
is recommended to get balanced and reproducible results.

Example output for default test:

*===================================================================*
|       |                  I/O Block Performance                    |
|       |-----------------------------------------------------------|
| Block |      Write (MB/sec)   |           Read (MB/sec)           |
|  Size |-----------------------|-----------------------------------|
|       |   Cached  | Effective |   Cached  | Effective |   Device  |
*===================================================================*
    512      81.66       45.49      219.12       96.79      106.70   
   1024     112.90       74.70      298.66       97.06      107.49   
   2048     137.34       79.63      358.69       98.09      106.96   
   4096     148.21       83.78      380.33       97.78      103.79   
   8192     163.32       90.54      393.68       96.63      103.41   
  16384     162.68       89.51      400.86       96.38      106.03   
  32768     158.44       90.91      404.39       96.20      105.08   
  65536     163.84       90.12      408.33       95.87      104.47   
 131072     159.15       86.82      399.78       94.94      106.15   
 262144     164.15       88.45      415.99       97.37      106.72   
 524288     155.40       84.95      421.55       97.66      106.08   
1048576     159.02       85.83      425.46       96.80      104.81   
2097152     163.75       87.80      427.69       96.63      106.60   
4194304     156.83       84.09      426.02       96.51      106.50   
---------------------------------------------------------------------
 Average    149.05       83.04      384.32       96.76      105.77   
 Maximum    164.15       90.91      427.69       98.09      107.49   
*===================================================================*
|                        I/O Metadata Performance                   |
*===================================================================*
  real io/sec:     699518
cached io/sec:    2074972

Explanation of the outputs:

'Cached Write Performance' means the performance what applications
and users experience if lots of free RAM is available but there is
no guarantee that the data is on the disk.

'Effective Write Performance' means that all data is written to the
disk.  This is more relevant for sustained write (large amount of data).

'Cached Read Performance' typically shows the memory bandwidth.
Caching read data can greatly help small reads and short-term rereads.

'Effective Read Performance' means non-cached read performance from the
disk via the file system.

'Device Read Performance' means non-cached read performance from the
disk without file system involvement.


Example output of speedtest (invoked with --speedtest):

Requested file size (bytes): 2147483648
File size (MB):        1        Speed (MB/s):   264.76
File size (MB):        2        Speed (MB/s):   263.96
File size (MB):        4        Speed (MB/s):   266.08
File size (MB):        8        Speed (MB/s):   261.78
File size (MB):       16        Speed (MB/s):   275.21
File size (MB):       32        Speed (MB/s):   270.33
File size (MB):       64        Speed (MB/s):     9.78
File size (MB):      128        Speed (MB/s):     6.66
File size (MB):      256        Speed (MB/s):     5.74
File size (MB):      512        Speed (MB/s):     5.43
File size (MB):     1024        Speed (MB/s):     5.26

Explanation of the outputs:

'File size' represents the sampling point at which speed is
calculated.

'Speed' indicates the speed at which data is being written to disk.

--- Contact & Support Information ---

Please send feedback and support queries to support@tuxera.com.
Thank you.


Copyright (c) 2008-2013 Tuxera Inc. All Rights Reserved.

