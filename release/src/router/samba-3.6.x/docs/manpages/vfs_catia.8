'\" t
.\"     Title: vfs_catia
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 09/18/2013
.\"    Manual: System Administration tools
.\"    Source: Samba 3.6
.\"  Language: English
.\"
.TH "VFS_CATIA" "8" "09/18/2013" "Samba 3\&.6" "System Administration tools"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
vfs_catia \- translate illegal characters in Catia filenames
.SH "SYNOPSIS"
.HP \w'\ 'u
vfs objects = catia
.SH "DESCRIPTION"
.PP
This VFS module is part of the
\fBsamba\fR(7)
suite\&.
.PP
The Catia CAD package commonly creates filenames that use characters that are illegal in CIFS filenames\&. The
vfs_catia
VFS module implements a character mapping so that these files can be shared with CIFS clients\&.
.PP
This module is stackable\&.
.PP
Up to samba version 3\&.4\&.x a fixed character mapping was used\&. The invalid windows characters \e / : * ? " < > | and the blank character were mapped in a hardcoded way\&.
.PP
Starting with samba\-3\&.5\&.0 a more flexible mapping was introduced\&. The new parameter "catia:mappings" now specifies the mapping on a char by char basis using the notation: unix hex char 0x\&.\&. : windows hex char 0x\&.\&. Multiple character mappings are separated by a comma\&.
.SH "EXAMPLES"
.PP
Samba versions up to 3\&.4\&.x:
.PP
Map Catia filenames on the [CAD] share:
.sp
.if n \{\
.RS 4
.\}
.nf
        \fI[CAD]\fR
	\m[blue]\fBpath = /data/cad\fR\m[]
	\m[blue]\fBvfs objects = catia\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
Samba versions 3\&.5\&.0 and later:
.PP
Map Catia filenames on the [CAD] share:
.sp
.if n \{\
.RS 4
.\}
.nf
        \fI[CAD]\fR
	\m[blue]\fBpath = /data/cad\fR\m[]
	\m[blue]\fBvfs objects = catia\fR\m[]
	\m[blue]\fBcatia:mappings = 0x22:0xa8\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
To get the full formerly fixed mappings:
.sp
.if n \{\
.RS 4
.\}
.nf
        \fI[CAD]\fR
	\m[blue]\fBpath = /data/cad\fR\m[]
	\m[blue]\fBvfs objects = catia\fR\m[]
	\m[blue]\fBcatia:mappings = 0x22:0xa8,0x2a:0xa4,0x2f:0xf8,0x3a:0xf7,0x3c:0xab,0x3e:0xbb,0x3f:0xbf,0x5c:0xff,0x7c:0xa6,0x20:0xb1\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
Unix filename to be translated (Note that the path delimiter "/" is not used here):
.PP
a\ea:a*a?a"a<a>a|a a
.PP
Resulting windows filename:
.PP
aÃ¿a\(dia\(Csa\(r?a\(ada\(Foa\(Fca\(bba\(+-a
.PP
Note that the character mapping must work in BOTH directions (unix \-> windows and windows \-> unix) to get unique and existing file names!
.PP
A NOT working example:
.sp
.if n \{\
.RS 4
.\}
.nf
        \fI[CAD]\fR
	\m[blue]\fBpath = /data/cad\fR\m[]
	\m[blue]\fBvfs objects = catia\fR\m[]
	\m[blue]\fBcatia:mappings = 0x3a:0x5f\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
Here the colon ":" is mapped to the underscore "_"\&.
.PP
Assuming a unix filename "a:should_work", which is well translated to windows as "a_should_work"\&.
.PP
BUT the reverse mapping from windows "a_should_work" to unix will result in "a:should:work" \- something like "file not found" will be returned\&.
.SH "VERSION"
.PP
This man page is correct for all versions up to 4\&.0\&.3 of the Samba suite\&.
.SH "AUTHOR"
.PP
The original Samba software and related utilities were created by Andrew Tridgell\&. Samba is now developed by the Samba Team as an Open Source project similar to the way the Linux kernel is developed\&.
.PP
New version written by Guenter Kukkukk kukks@samba\&.org
