/* header auto-generated by pidl */

#include "librpc/ndr/libndr.h"
#include "librpc/gen_ndr/idmap.h"

#ifndef _HEADER_NDR_idmap
#define _HEADER_NDR_idmap

#define NDR_IDMAP_CALL_COUNT (0)
enum ndr_err_code ndr_push_id_type(struct ndr_push *ndr, int ndr_flags, enum id_type r);
enum ndr_err_code ndr_pull_id_type(struct ndr_pull *ndr, int ndr_flags, enum id_type *r);
void ndr_print_id_type(struct ndr_print *ndr, const char *name, enum id_type r);
enum ndr_err_code ndr_push_unixid(struct ndr_push *ndr, int ndr_flags, const struct unixid *r);
enum ndr_err_code ndr_pull_unixid(struct ndr_pull *ndr, int ndr_flags, struct unixid *r);
void ndr_print_unixid(struct ndr_print *ndr, const char *name, const struct unixid *r);
enum ndr_err_code ndr_push_id_mapping(struct ndr_push *ndr, int ndr_flags, enum id_mapping r);
enum ndr_err_code ndr_pull_id_mapping(struct ndr_pull *ndr, int ndr_flags, enum id_mapping *r);
void ndr_print_id_mapping(struct ndr_print *ndr, const char *name, enum id_mapping r);
enum ndr_err_code ndr_push_id_map(struct ndr_push *ndr, int ndr_flags, const struct id_map *r);
enum ndr_err_code ndr_pull_id_map(struct ndr_pull *ndr, int ndr_flags, struct id_map *r);
void ndr_print_id_map(struct ndr_print *ndr, const char *name, const struct id_map *r);
#endif /* _HEADER_NDR_idmap */
